<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.employment.mapper.EmploymentInfoMapper">
    
    <resultMap type="EmploymentInfo" id="EmploymentInfoResult">
        <result property="employmentId"    column="employment_id"    />
        <result property="studentId"    column="student_id"    />
        <result property="companyName"    column="company_name"    />
        <result property="position"    column="position"    />
        <result property="salary"    column="salary"    />
        <result property="employmentDate"    column="employment_date"    />
        <result property="location"    column="location"    />
        <result property="status"    column="status"    />
    </resultMap>

    <sql id="selectEmploymentInfoVo">
        select employment_id, student_id, company_name, position, salary, employment_date, location, status from employment_info
    </sql>

    <select id="selectEmploymentInfoList" parameterType="EmploymentInfo" resultMap="EmploymentInfoResult">
        <include refid="selectEmploymentInfoVo"/>
        <where>  
            <if test="studentId != null "> and student_id = #{studentId}</if>
            <if test="companyName != null  and companyName != ''"> and company_name like concat('%', #{companyName}, '%')</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
            <if test="salary != null "> and salary = #{salary}</if>
            <if test="employmentDate != null "> and employment_date = #{employmentDate}</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectEmploymentInfoByEmploymentId" parameterType="Long" resultMap="EmploymentInfoResult">
        <include refid="selectEmploymentInfoVo"/>
        where employment_id = #{employmentId}
    </select>

    <insert id="insertEmploymentInfo" parameterType="EmploymentInfo" useGeneratedKeys="true" keyProperty="employmentId">
        insert into employment_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="companyName != null and companyName != ''">company_name,</if>
            <if test="position != null and position != ''">position,</if>
            <if test="salary != null">salary,</if>
            <if test="employmentDate != null">employment_date,</if>
            <if test="location != null and location != ''">location,</if>
            <if test="status != null and status != ''">status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="companyName != null and companyName != ''">#{companyName},</if>
            <if test="position != null and position != ''">#{position},</if>
            <if test="salary != null">#{salary},</if>
            <if test="employmentDate != null">#{employmentDate},</if>
            <if test="location != null and location != ''">#{location},</if>
            <if test="status != null and status != ''">#{status},</if>
         </trim>
    </insert>

    <update id="updateEmploymentInfo" parameterType="EmploymentInfo">
        update employment_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="companyName != null and companyName != ''">company_name = #{companyName},</if>
            <if test="position != null and position != ''">position = #{position},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="employmentDate != null">employment_date = #{employmentDate},</if>
            <if test="location != null and location != ''">location = #{location},</if>
            <if test="status != null and status != ''">status = #{status},</if>
        </trim>
        where employment_id = #{employmentId}
    </update>

    <delete id="deleteEmploymentInfoByEmploymentId" parameterType="Long">
        delete from employment_info where employment_id = #{employmentId}
    </delete>

    <delete id="deleteEmploymentInfoByEmploymentIds" parameterType="String">
        delete from employment_info where employment_id in 
        <foreach item="employmentId" collection="array" open="(" separator="," close=")">
            #{employmentId}
        </foreach>
    </delete>
</mapper>